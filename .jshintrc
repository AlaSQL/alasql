{
    // Settings
    "passfail"      : false,  // Stop on first error.
    "maxerr"        : 10000,    // Maximum error before stopping.
    //"maxstatements" : 200,       // Set lower as you evolve...


    // Predefined globals whom JSHint will ignore.
    "browser"       : true,   // Standard browser globals e.g. `window`, `document`.
    "node"          : true,
    "wsh"           : true,   // Windows Scripting Host.
    "jquery"        : true,
    "mocha"         : true,
    "node"          : true,
    "worker"        : true,

    "predef"        : [  // Custom globals.
        "alasql",
        "yy",
        "K",
        "L",
        "N",
        "D",
        "S",
        "escapeq",
        "NL",
        "ID",
        "P",
	 "utils",
        "n2u",
        "LocalFileSystem",
        "Meteor",
        "Mongo",
        "decartes",
        "arrayUnion",
        "Npm",
        "returnTrue",
        "modify",
        "Tabletop",
        "extend",
        "distinctArray",
        "arrayDiff",
        "Query",
        "queryfn",
        "JSONtoString",
        "processSelector",
        "cloneDeep",
        "hash"
    ],


    // Development.
    "debug"         : false,  // Allow debugger statements e.g. browser breakpoints.
    "devel"         : false,   // Allow developments statements e.g. `console.log();`.
    "evil"          :true,

    // ECMAScript 5.
    "es5"           : true,   // Allow ECMAScript 5 syntax.
    "strict"        : false,  // Require `use strict` pragma  in every file.
    "globalstrict"  : false,  // Allow global "use strict" (also enables 'strict').


    // The Good Parts.
    "asi"           : true,  // Tolerate Automatic Semicolon Insertion (no semicolons).
    "laxbreak"      : true,   // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
    "bitwise"       : false,   // Prohibit bitwise operators (&, |, ^, etc.).
    "boss"          : false,  // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
    "curly"         : true,   // Require {} for every new block or scope.
    "eqeqeq"        : true,   // Require triple equals i.e. `===`.
    "eqnull"        : false,  // Tolerate use of `== null`.
    "evil"          : true,  // Tolerate use of `eval`.
    "expr"          : false,  // Tolerate `ExpressionStatement` as Programs.
    "forin"         : false,  // Tolerate `for in` loops without `hasOwnPrototype`.
    "immed"         : true,   // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
    "latedef"       : true,   // Prohipit variable use before definition.
    "loopfunc"      : true,  // Allow functions to be defined within loops.
    "noarg"         : true,   // Prohibit use of `arguments.caller` and `arguments.callee`.
    "regexp"        : false,   // Prohibit `.` and `[^...]` in regular expressions.
    "regexdash"     : false,  // Tolerate unescaped last dash i.e. `[-...]`.
    "scripturl"     : true,   // Tolerate script-targeted URLs.
    "shadow"        : true,  // Allows re-define variables later in code e.g. `var x=1; x=2;`.
    "supernew"      : false,  // Tolerate `new function () { ... };` and `new Object;`.
    "undef"         : true,   // Require all non-global variables be declared before they are used.
    "unused"        : true,    //This option warns when you define and never use your variables. It is very useful for general code cleanup, especially when used in addition to undef.



    // Personal styling preferences.
    "newcap"        : false,   // Require capitalization of all constructor functions e.g. `new F()`.
    "noempty"       : true,   // Prohibit use of empty blocks.
    "nonew"         : true,   // Prohibit use of constructors for side-effects.
    "nomen"         : true,   // Prohibit use of initial or trailing underbars in names.
    "onevar"        : false,  // Allow only one `var` statement per function.
    "plusplus"      : false,  // Prohibit use of `++` & `--`.
    "sub"           : false,  // Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`.
    "trailing"      : true,   // Prohibit trailing whitespaces.
    "white"         : false,  // Check against strict whitespace and indentation rules.
    "indent"        : 1,       // Specify indentation spacing
    "lastsemic"     : true,    // Suppresses warnings about missing semicolons when the semicolon is omitted for the last statement in a one-line block
    "multistr"      : true
}
