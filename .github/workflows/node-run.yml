name: Test on old Node versions
 
on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Bulid from src
      uses: actions/setup-node@v3
      with:
        node-version: "latest"
    - run: npx yarn install --frozen-lockfile
    - run: npx yarn test
    - run: npm install babel-cli @babel/preset-env @babel/preset-es2015
    - run: cp -r test test_es5 # copy all extra files
    - run: for file in test/*.js; do npx babel "$file" -o "test_es5/$(basename "$file")" --presets=@babel/preset-env,@babel/preset-es2015; done
    - uses: actions/upload-artifact@master
      with:
        name: dist
        path: dist/
    - uses: actions/upload-artifact@master
      with:
        name: test_es5
        path: test_es5/

  Test:
    needs: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #node-version: [0.10.x, 0.12.x, 4.x, 5.x, 6.x, 7.x, 8.x, 9.x, 10.x, 11.x, 12.x, 13.x, 14.x, 15.x, 16.x, 17.x, 18.x, 19.x, latest]
        node-version: [16.x, 17.x, 18.x, 19.x]

    steps:
    - uses: actions/checkout@v3
    - name: Run prod version with Node v${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/download-artifact@master
      with:
        name: dist
        path: dist/
    - uses: actions/download-artifact@master
      with:
        name: test_es5
        path: test_es5/
    - run: sed -i 's/"alasql"/"alasql_"/g' package.json
    - run: npm i --save -dev mocha
    - run: ./node_modules/.bin/mocha ./test --reporter dot
    - run: ./node_modules/.bin/mocha ./test_es5 --reporter dot
 
 

  
